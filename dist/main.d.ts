import { IGameEngine, IRenderer, IStateManager, ISceneManager, IInputManager, ICamera, IStatusBar, IPlayerShip } from './types';
import { QuestSystem } from './questSystem';
import { EffectSystem } from './effectSystem';
export declare class GameEngine implements IGameEngine {
    canvas: HTMLCanvasElement;
    renderer: IRenderer;
    stateManager: IStateManager;
    sceneManager: ISceneManager;
    inputManager: IInputManager;
    camera: ICamera;
    statusBar: IStatusBar;
    player: IPlayerShip;
    questSystem: QuestSystem;
    effectSystem: EffectSystem;
    gameTime: number;
    lastFrameTime: number;
    private targetFPS;
    private frameInterval;
    private lastRenderTime;
    private frameCount;
    private fpsCounter;
    private fpsUpdateTimer;
    private maxDeltaTime;
    private isRunning;
    private animationFrameId;
    constructor(canvasId: string);
    private setupPerformanceMonitoring;
    startGameLoop(): void;
    stopGameLoop(): void;
    private gameLoop;
    update(deltaTime: number): void;
    private updatePlayerOptimized;
    render(): void;
    private isPlayerVisible;
    renderHUD(): void;
    setTargetFPS(fps: number): void;
    getPerformanceStats(): {
        fps: number;
        frameTime: number;
        memoryUsage?: number;
    };
    dispose(): void;
}
export declare function initializeGame(): void;
